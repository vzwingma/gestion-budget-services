name: CI All branches

# Controls when the action will run.
  # Triggers the workflow on push or pull request events but only for the master branch
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches-ignore: [ master ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # Step that does that actual cache save and restore
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # Runs the Build with Maven
      - name: Build with Maven
        run: mvn clean install -B -P prod --file pom.xml
      # Upload Releases Snapshot
      - uses: actions/upload-artifact@v2
        with:
          name: service-parametrages.jar
          path: /home/runner/work/gestion-budget-services/gestion-budget-services/parametrages_service/target/service-parametrages.jar
      - uses: actions/upload-artifact@v2
        with:
          path: /home/runner/work/gestion-budget-services/gestion-budget-services/utilisateurs_service/target/service-utilisateurs.jar
          name: service-utilisateurs.jar
      - uses: actions/upload-artifact@v2
        with:
          path: /home/runner/work/gestion-budget-services/gestion-budget-services/budgets_service/target/service-budgets.jar
          name: service-budgets.jar
      - uses: actions/upload-artifact@v2
        with:
          path: /home/runner/work/gestion-budget-services/gestion-budget-services/comptes_service/target/service-comptes.jar
          name: service-comptes.jar
      # Upload Docker
      - uses: actions/upload-artifact@v2
        with:
          name: Dockerfile-PARAMS_SERVICE
          path: gestion-budget-services/parametrages_service/src/main/external-ressources/docker/Dockerfile-PARAMS_SERVICE
      - uses: actions/upload-artifact@v2
        with:
          path: gestion-budget-services/utilisateurs_service/src/main/external-ressources/docker/Dockerfile-UTILISATEURS_SERVICE
          name: Dockerfile-UTILISATEURS_SERVICE
      - uses: actions/upload-artifact@v2
        with:
          path: gestion-budget-services/budgets_service/src/main/external-ressources/docker/Dockerfile-BUDGETS_SERVICE
          name: Dockerfile-BUDGETS_SERVICE
      - uses: actions/upload-artifact@v2
        with:
          path: gestion-budget-services/comptes_service/src/main/external-ressources/docker/Dockerfile-COMPTES_SERVICE
          name: Dockerfile-COMPTES_SERVICE
  # PUBLISH DOCKER IMAGES
  docker-parametrages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: service-parametrages.jar
      - uses: actions/download-artifact@v2
        with:
          name: Dockerfile-PARAMS_SERVICE
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-PARAMS_SERVICE
          push: true
          tags: vzwingmann/gestion_budget_services:parametrages-snapshot
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  docker-comptes:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: service-comptes.jar
      - uses: actions/download-artifact@v2
        with:
          name: Dockerfile-COMPTES_SERVICE
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-COMPTES_SERVICE
          push: true
          tags: vzwingmann/gestion_budget_services:comptes-snapshot
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  docker-utilisateurs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: service-utilisateurs.jar
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: Dockerfile-UTILISATEURS_SERVICE
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-UTILISATEURS_SERVICE
          push: true
          tags: vzwingmann/gestion_budget_services:utilisateurs-snapshot
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  docker-budgets:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: service-budgets.jar
      - uses: actions/download-artifact@v2
        with:
          name: Dockerfile-BUDGETS_SERVICE
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-BUDGETS_SERVICE
          push: true
          tags: vzwingmann/gestion_budget_services:budgets-snapshot
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}